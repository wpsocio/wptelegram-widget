{"version":3,"file":"blocks-CAl2HjJG.js","sources":["../../../../../../packages/js/utilities/blocks.ts","../../../../js/blocks/ajax-channel-feed/Output.tsx","../../../../js/blocks/ajax-channel-feed/Edit.tsx","../../../../js/blocks/ajax-channel-feed/constants.ts","../../../../js/blocks/ajax-channel-feed/index.tsx","../../../../js/blocks/channel-feed/Output.tsx","../../../../js/blocks/channel-feed/Edit.tsx","../../../../js/blocks/channel-feed/constants.ts","../../../../js/blocks/channel-feed/index.tsx","../../../../js/blocks/getDomData.ts","../../../../js/blocks/join-channel/Controls.tsx","../../../../js/blocks/join-channel/TelegramIcon.tsx","../../../../js/blocks/join-channel/JoinButton.tsx","../../../../js/blocks/join-channel/constants.ts","../../../../js/blocks/join-channel/index.tsx","../../../../js/blocks/single-post/Controls.tsx","../../../../js/blocks/single-post/Placeholder.tsx","../../../../js/blocks/single-post/Edit.tsx","../../../../js/blocks/single-post/constants.ts","../../../../js/blocks/single-post/index.tsx"],"sourcesContent":["export const buildShortCodeFromAtts = (\n\tattributes: Record<string, unknown>,\n\tallowedAtts: Array<string>,\n\tshrotcode: string,\n): string => {\n\tconst attsKV = allowedAtts\n\t\t.filter((att) => attributes?.[att])\n\t\t.map((att) => `${att}=\"${attributes[att]}\"`);\n\n\tconst atts = attsKV.length ? ` ${attsKV.join(' ')}` : '';\n\n\treturn `[${shrotcode} ${atts}]`;\n};\n","import { buildShortCodeFromAtts } from '@wpsocio/utilities/blocks';\n\nconst allowedAtts = ['widget_width', 'widget_height', 'username'];\nconst shortcode = 'wptelegram-ajax-widget';\n\nexport const Output: React.FC<{\n\tattributes: Record<string, string | number>;\n}> = ({ attributes }) => {\n\treturn <>{buildShortCodeFromAtts(attributes, allowedAtts, shortcode)}</>;\n};\n","import { InspectorControls } from '@wordpress/block-editor';\nimport type { BlockEditProps } from '@wordpress/blocks';\nimport { Dashicon, Flex, PanelBody, TextControl } from '@wordpress/components';\nimport { useCallback } from '@wordpress/element';\n\nimport { __, sprintf } from '@wpsocio/i18n';\n\nimport type { AjaxWidgetAtts } from '../types';\nimport { Output } from './Output';\n\nconst savedSettings = (window.wptelegram_widget?.savedSettings ||\n\t{}) as AjaxWidgetAtts;\n\nexport const Edit: React.FC<BlockEditProps<AjaxWidgetAtts>> = ({\n\tattributes,\n\tsetAttributes,\n\tclassName,\n}) => {\n\tconst { widget_width, widget_height, username } = attributes;\n\n\tconst onChangeWidth = useCallback(\n\t\t(newWidth: string) => setAttributes({ widget_width: newWidth }),\n\t\t[setAttributes],\n\t);\n\tconst onChangeHeight = useCallback(\n\t\t(newHeight: string) => setAttributes({ widget_height: newHeight }),\n\t\t[setAttributes],\n\t);\n\tconst onChangeUsername = useCallback(\n\t\t(newUsername: string) =>\n\t\t\tsetAttributes({ username: newUsername?.replace('@', '') }),\n\t\t[setAttributes],\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={__('Widget Options')}>\n\t\t\t\t\t<Flex direction=\"column\" gap={4}>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={__('Username')}\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tonChange={onChangeUsername}\n\t\t\t\t\t\t\thelp={sprintf(\n\t\t\t\t\t\t\t\t'%s %s',\n\t\t\t\t\t\t\t\t__('Channel username.'),\n\t\t\t\t\t\t\t\t__('Leave empty for default.'),\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tplaceholder={savedSettings?.username || 'WPTelegram'}\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={__('Widget Width')}\n\t\t\t\t\t\t\tvalue={widget_width}\n\t\t\t\t\t\t\tonChange={onChangeWidth}\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={__('Widget Height')}\n\t\t\t\t\t\t\tvalue={widget_height}\n\t\t\t\t\t\t\tonChange={onChangeHeight}\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Flex>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div className={className}>\n\t\t\t\t<div className=\"widget-label\">\n\t\t\t\t\t<Dashicon icon=\"shortcode\" />\n\t\t\t\t\t<span>{__('Telegram Channel Ajax Feed')}</span>\n\t\t\t\t</div>\n\t\t\t\t<code className=\"widget-shortcode\">\n\t\t\t\t\t<Output attributes={attributes} />\n\t\t\t\t</code>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import type { Block } from '@wordpress/blocks';\n\nimport type { AjaxWidgetAtts } from '../types';\n\nexport const blockAttributes: Block<AjaxWidgetAtts>['attributes'] = {\n\tusername: {\n\t\ttype: 'string',\n\t\tdefault: '',\n\t},\n\twidget_width: {\n\t\ttype: 'string',\n\t\tdefault: '100%',\n\t},\n\twidget_height: {\n\t\ttype: 'string',\n\t\tdefault: '600',\n\t},\n};\n","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wpsocio/i18n';\n\nimport type { AjaxWidgetAtts } from '../types';\nimport { Edit } from './Edit';\nimport { Output } from './Output';\nimport { blockAttributes } from './constants';\n\nimport './style.scss';\n\nregisterBlockType<AjaxWidgetAtts>('wptelegram/widget-ajax-channel-feed', {\n\ttitle: __('Telegram Channel Ajax Feed'),\n\ticon: 'format-aside',\n\tcategory: 'wptelegram',\n\tattributes: blockAttributes,\n\tedit: Edit,\n\tsave: ({ attributes }) => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Output attributes={attributes} />\n\t\t\t</div>\n\t\t);\n\t},\n});\n","import { buildShortCodeFromAtts } from '@wpsocio/utilities/blocks';\n\nconst allowedAtts = ['author_photo', 'num_messages', 'widget_width'];\nconst shortcode = 'wptelegram-widget';\n\nexport const Output: React.FC<{\n\tattributes: Record<string, string | number>;\n}> = ({ attributes }) => {\n\treturn <>{buildShortCodeFromAtts(attributes, allowedAtts, shortcode)}</>;\n};\n","import { InspectorControls } from '@wordpress/block-editor';\nimport type { BlockEditProps } from '@wordpress/blocks';\nimport {\n\tDashicon,\n\tFlex,\n\tPanelBody,\n\tRadioControl,\n\tTextControl,\n} from '@wordpress/components';\nimport { useCallback } from '@wordpress/element';\n\nimport { __ } from '@wpsocio/i18n';\n\nimport type { LegacyWidgetAtts } from '../types';\nimport { Output } from './Output';\n\nconst getAuthorPhotoOptions = () => [\n\t{ label: 'Auto', value: 'auto' },\n\t{ label: 'Always show', value: 'always_show' },\n\t{ label: 'Always hide', value: 'always_hide' },\n];\n\nexport const Edit: React.FC<BlockEditProps<LegacyWidgetAtts>> = ({\n\tattributes,\n\tsetAttributes,\n\tclassName,\n}) => {\n\tconst { widget_width, author_photo, num_messages } = attributes;\n\n\tconst onChangeAuthorPhoto = useCallback(\n\t\t(newStyle: string) =>\n\t\t\tsetAttributes({\n\t\t\t\tauthor_photo: newStyle as LegacyWidgetAtts['author_photo'],\n\t\t\t}),\n\t\t[setAttributes],\n\t);\n\tconst onChangeWidth = useCallback(\n\t\t(newWidth: string) =>\n\t\t\tsetAttributes({\n\t\t\t\twidget_width: newWidth as LegacyWidgetAtts['widget_width'],\n\t\t\t}),\n\t\t[setAttributes],\n\t);\n\tconst onChangeNum = useCallback(\n\t\t(newValue: string) =>\n\t\t\tsetAttributes({\n\t\t\t\tnum_messages: Number.parseInt(newValue) || 5,\n\t\t\t}),\n\t\t[setAttributes],\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={__('Widget Options')}>\n\t\t\t\t\t<Flex direction=\"column\" gap={4}>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={__('Widget Width')}\n\t\t\t\t\t\t\tvalue={widget_width}\n\t\t\t\t\t\t\tonChange={onChangeWidth}\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tmin=\"10\"\n\t\t\t\t\t\t\tmax=\"100\"\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\tlabel={__('Author Photo')}\n\t\t\t\t\t\t\tselected={author_photo}\n\t\t\t\t\t\t\tonChange={onChangeAuthorPhoto}\n\t\t\t\t\t\t\toptions={getAuthorPhotoOptions()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={__('Number of Messages')}\n\t\t\t\t\t\t\tvalue={num_messages}\n\t\t\t\t\t\t\tonChange={onChangeNum}\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t\tmax=\"50\"\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Flex>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div className={className} key=\"shortcode\">\n\t\t\t\t<div className=\"widget-label\">\n\t\t\t\t\t<Dashicon icon=\"shortcode\" />\n\t\t\t\t\t<span>{__('Telegram Channel Feed')}</span>\n\t\t\t\t</div>\n\t\t\t\t<code className=\"widget-shortcode\">\n\t\t\t\t\t<Output attributes={attributes} />\n\t\t\t\t</code>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import type { Block } from '@wordpress/blocks';\n\nimport type { LegacyWidgetAtts } from '../types';\n\nexport const blockAttributes: Block<LegacyWidgetAtts>['attributes'] = {\n\twidget_width: {\n\t\ttype: 'string',\n\t\tdefault: '100',\n\t},\n\tauthor_photo: {\n\t\ttype: 'string',\n\t\tdefault: 'auto',\n\t},\n\tnum_messages: {\n\t\ttype: 'string',\n\t\tdefault: '5',\n\t},\n};\n","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wpsocio/i18n';\n\nimport { Edit } from './Edit';\nimport { Output } from './Output';\nimport { blockAttributes } from './constants';\n\nimport './style.scss';\n\nregisterBlockType('wptelegram/widget-channel-feed', {\n\ttitle: __('Telegram Channel Feed'),\n\ticon: 'format-aside',\n\tcategory: 'wptelegram',\n\tattributes: blockAttributes,\n\tedit: Edit,\n\tsave: ({ attributes }) => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Output attributes={attributes} />\n\t\t\t</div>\n\t\t);\n\t},\n});\n","import { getPluginData } from '@wpsocio/services/get-plugin-data.js';\nimport type { WPTelegramWidgetData } from './types';\n\nexport const getDomData = <\n\tK extends keyof WPTelegramWidgetData | undefined = undefined,\n>(\n\tkey?: K,\n): K extends keyof WPTelegramWidgetData\n\t? WPTelegramWidgetData[K]\n\t: WPTelegramWidgetData => {\n\treturn getPluginData('wptelegram_widget', key);\n};\n","import {\n\tBlockAlignmentToolbar,\n\tBlockControls,\n\tInspectorControls,\n} from '@wordpress/block-editor';\nimport { Flex, PanelBody, TextControl } from '@wordpress/components';\nimport { Fragment, useCallback, useEffect } from '@wordpress/element';\n\nimport { __ } from '@wpsocio/i18n';\n\nimport { getDomData } from '../getDomData';\nimport type { JoinChannelAtts } from '../types';\n\nexport type ControlsProps = {\n\tsetAttributes: (newAttributes: Partial<JoinChannelAtts>) => void;\n\tattributes: JoinChannelAtts;\n};\n\nexport const Controls: React.FC<ControlsProps> = ({\n\tsetAttributes,\n\tattributes,\n}) => {\n\tconst { alignment, link, text } = attributes;\n\n\tconst { join_link_text, join_link_url } = getDomData('uiData');\n\n\tuseEffect(() => {\n\t\tif (!link) {\n\t\t\tsetAttributes({ link: join_link_url });\n\t\t}\n\t\tif (!text) {\n\t\t\tsetAttributes({ text: join_link_text });\n\t\t}\n\t}, []);\n\n\tconst onChangeChannelLink = useCallback(\n\t\t(newValue: string) => setAttributes({ link: newValue }),\n\t\t[setAttributes],\n\t);\n\tconst onChangeButtonText = useCallback(\n\t\t(newValue: string) => setAttributes({ text: newValue }),\n\t\t[setAttributes],\n\t);\n\tconst onChangeAlign = useCallback(\n\t\t(align: JoinChannelAtts['alignment']) =>\n\t\t\tsetAttributes({ alignment: align }),\n\t\t[setAttributes],\n\t);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<InspectorControls key=\"controls\">\n\t\t\t\t<PanelBody title={__('Button details')}>\n\t\t\t\t\t<Flex direction=\"column\" gap={4}>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={__('Channel Link')}\n\t\t\t\t\t\t\tvalue={link || ''}\n\t\t\t\t\t\t\tonChange={onChangeChannelLink}\n\t\t\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={__('Button text')}\n\t\t\t\t\t\t\tvalue={text || ''}\n\t\t\t\t\t\t\tonChange={onChangeButtonText}\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Flex>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<BlockControls>\n\t\t\t\t<BlockAlignmentToolbar value={alignment} onChange={onChangeAlign} />\n\t\t\t</BlockControls>\n\t\t</Fragment>\n\t);\n};\n","import { G, Path, SVG } from '@wordpress/components';\n\nexport const TelegramIcon = ({ fill = '#ffffff' }) => {\n\treturn (\n\t\t<SVG width=\"19px\" height=\"16px\" viewBox=\"0 0 19 16\">\n\t\t\t<G fill=\"none\">\n\t\t\t\t<Path\n\t\t\t\t\tfill={fill}\n\t\t\t\t\td=\"M0.465,6.638 L17.511,0.073 C18.078,-0.145 18.714,0.137 18.932,0.704 C19.009,0.903 19.026,1.121 18.981,1.33 L16.042,15.001 C15.896,15.679 15.228,16.111 14.549,15.965 C14.375,15.928 14.211,15.854 14.068,15.748 L8.223,11.443 C7.874,11.185 7.799,10.694 8.057,10.345 C8.082,10.311 8.109,10.279 8.139,10.249 L14.191,4.322 C14.315,4.201 14.317,4.002 14.195,3.878 C14.091,3.771 13.926,3.753 13.8,3.834 L5.602,9.138 C5.112,9.456 4.502,9.528 3.952,9.333 L0.486,8.112 C0.077,7.967 -0.138,7.519 0.007,7.11 C0.083,6.893 0.25,6.721 0.465,6.638 Z\"\n\t\t\t\t/>\n\t\t\t</G>\n\t\t</SVG>\n\t);\n};\n","import { Button } from '@wordpress/components';\nimport { TelegramIcon } from './TelegramIcon';\n\nexport type JoinButtonProps = {\n\tlink: string;\n\ttext: string;\n\tisEditing?: boolean;\n};\n\nexport const JoinButton: React.FC<JoinButtonProps> = ({\n\tlink,\n\ttext,\n\tisEditing,\n}) => {\n\treturn (\n\t\t<Button\n\t\t\thref={link}\n\t\t\tclassName=\"join-link\"\n\t\t\ticon={<TelegramIcon />}\n\t\t\ttarget={isEditing ? '_blank' : undefined}\n\t\t\trel=\"noopener noreferrer\"\n\t\t>\n\t\t\t{text}\n\t\t</Button>\n\t);\n};\n","import type { Block } from '@wordpress/blocks';\n\nimport type { JoinChannelAtts } from '../types';\n\nexport const blockAttributes: Block<JoinChannelAtts>['attributes'] = {\n\tlink: {\n\t\ttype: 'string',\n\t},\n\ttext: {\n\t\ttype: 'string',\n\t},\n\talignment: {\n\t\ttype: 'string',\n\t\tdefault: 'center',\n\t},\n};\n","import { useBlockProps } from '@wordpress/block-editor';\nimport { registerBlockType } from '@wordpress/blocks';\n\nimport { __ } from '@wpsocio/i18n';\n\nimport { Controls } from './Controls';\nimport { JoinButton } from './JoinButton';\nimport { TelegramIcon } from './TelegramIcon';\n\nimport { blockAttributes } from './constants';\n\nimport './style.scss';\n\nregisterBlockType('wptelegram/widget-join-channel', {\n\tapiVersion: 3,\n\ttitle: __('Join Telegram Channel'),\n\ticon: <TelegramIcon fill=\"#555d66\" />,\n\tcategory: 'wptelegram',\n\tattributes: blockAttributes,\n\tgetEditWrapperProps: (attributes) => {\n\t\tconst { alignment } = attributes;\n\t\tif (['left', 'center', 'right', 'wide', 'full'].includes(alignment)) {\n\t\t\treturn { 'data-align': alignment };\n\t\t}\n\t\treturn { 'data-align': '' };\n\t},\n\tedit: ({ attributes, setAttributes }) => {\n\t\tconst blockProps = useBlockProps({\n\t\t\tclassName: `align${attributes.alignment}`,\n\t\t});\n\n\t\treturn (\n\t\t\t<div {...blockProps}>\n\t\t\t\t<Controls attributes={attributes} setAttributes={setAttributes} />\n\t\t\t\t<JoinButton {...attributes} isEditing />\n\t\t\t</div>\n\t\t);\n\t},\n\t// Save is handled by PHP via render_callback\n\t// because WP blocks sometimes suck big time\n\t// by failing block validation for no reason\n\t// save: null\n\t/* save: ({ attributes }) => {\n\t\tconst blockProps = useBlockProps.save();\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...blockProps}\n\t\t\t\tclassName={`wp-block-wptelegram-widget-join-channel align${attributes.alignment}`}\n\t\t\t>\n\t\t\t\t<JoinButton {...attributes} />\n\t\t\t</div>\n\t\t);\n\t}, */\n\tdeprecated: [\n\t\t{\n\t\t\tattributes: blockAttributes,\n\t\t\tsave() {\n\t\t\t\treturn null;\n\t\t\t},\n\t\t},\n\t],\n});\n","import {\n\tBlockAlignmentToolbar,\n\tBlockControls,\n\tInspectorControls,\n} from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\tToggleControl,\n\tToolbarButton,\n\tToolbarGroup,\n} from '@wordpress/components';\nimport { Fragment } from '@wordpress/element';\nimport { __ } from '@wpsocio/i18n';\n\nexport type ControlsProps = {\n\tuserpic: boolean;\n\ttoggleUserPic: (value: boolean) => void;\n\tshowEditButton: boolean;\n\tswitchBackToURLInput: VoidFunction;\n\talignment: NonNullable<BlockAlignmentToolbar.Props['controls']>[number];\n\tchangeAlignment: NonNullable<BlockAlignmentToolbar.Props['onChange']>;\n};\n\nexport const Controls: React.FC<ControlsProps> = ({\n\tuserpic,\n\ttoggleUserPic,\n\tshowEditButton,\n\tswitchBackToURLInput,\n\talignment,\n\tchangeAlignment,\n}) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={__('Options')}>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={__('Author Photo')}\n\t\t\t\t\t\tchecked={userpic}\n\t\t\t\t\t\tonChange={toggleUserPic}\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<BlockControls>\n\t\t\t\t<BlockAlignmentToolbar value={alignment} onChange={changeAlignment} />\n\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t{showEditButton && (\n\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\tclassName=\"components-toolbar__control\"\n\t\t\t\t\t\t\ttitle={__('Edit URL')}\n\t\t\t\t\t\t\ticon=\"edit\"\n\t\t\t\t\t\t\tonClick={switchBackToURLInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</ToolbarGroup>\n\t\t\t</BlockControls>\n\t\t</Fragment>\n\t);\n};\n","import { Button, Placeholder as WPPlaceholder } from '@wordpress/components';\n\nimport { __ } from '@wpsocio/i18n';\n\nconst errorStyle: React.CSSProperties = { border: '2px solid #f71717' };\n\ntype PlaceholderProps = {\n\terror?: boolean;\n\tlabel: string;\n\tonChangeURL: (event: React.ChangeEvent<HTMLInputElement>) => void;\n\tonSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n\turl: string;\n};\n\nexport const Placeholder: React.FC<PlaceholderProps> = ({\n\terror,\n\tlabel,\n\tonChangeURL,\n\tonSubmit,\n\turl,\n}) => {\n\tconst style = error ? errorStyle : undefined;\n\n\treturn (\n\t\t<WPPlaceholder\n\t\t\ticon=\"wordpress-alt\"\n\t\t\tlabel={label}\n\t\t\tclassName=\"wp-block-embed-telegram\"\n\t\t>\n\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t<input\n\t\t\t\t\taria-label={label}\n\t\t\t\t\tclassName=\"components-placeholder__input\"\n\t\t\t\t\tonChange={onChangeURL}\n\t\t\t\t\tplaceholder=\"https://t.me/WPTelegram/102\"\n\t\t\t\t\tstyle={style}\n\t\t\t\t\ttype=\"url\"\n\t\t\t\t\tvalue={url || ''}\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">{__('Embed')}</Button>\n\t\t\t</form>\n\t\t</WPPlaceholder>\n\t);\n};\n","import type { BlockEditProps } from '@wordpress/blocks';\nimport { Spinner } from '@wordpress/components';\nimport { useFocusableIframe, useMergeRefs } from '@wordpress/compose';\nimport { Fragment, useEffect, useRef, useState } from '@wordpress/element';\nimport { addQueryArgs } from '@wordpress/url';\nimport { __ } from '@wpsocio/i18n';\nimport type { SinglePostAtts } from '../types';\nimport { Controls } from './Controls';\nimport { Placeholder } from './Placeholder';\n\nconst { message_view_url } = window.wptelegram_widget.assets;\n\nexport function Edit(props: BlockEditProps<SinglePostAtts>) {\n\tconst [iframeState, setIframeState] = useState<'loading' | 'idle' | 'error'>(\n\t\t'loading',\n\t);\n\tconst [isEditingURL, setIsEditingURL] = useState(false);\n\tconst [url, setUrl] = useState(props.attributes.url || '');\n\tconst [userpic, setUserpic] = useState<boolean>(\n\t\tprops.attributes.userpic ?? true,\n\t);\n\tconst [iframeHeight, setIframeHeight] = useState(0);\n\n\tconst { className } = props;\n\tconst { alignment, iframe_src } = props.attributes;\n\n\tconst label = __('Telegram post URL');\n\n\tfunction onChangeURL(event: React.ChangeEvent<HTMLInputElement>) {\n\t\tsetUrl(event.target.value);\n\t}\n\n\tfunction updateUrl(event: React.FormEvent<HTMLFormElement>) {\n\t\tif (event) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tconst regex =\n\t\t\t/^(?:https?:\\/\\/)?t\\.me\\/(?<username>[a-z][a-z0-9_]{3,30}[a-z0-9])\\/(?<message_id>\\d+)$/i;\n\t\tconst match = url.match(regex);\n\t\t// validate URL\n\t\tif (null === match) {\n\t\t\tsetIframeState('error');\n\t\t} else {\n\t\t\tconst iframe_src = getIframeSrc(\n\t\t\t\tmatch.groups as {\n\t\t\t\t\tusername: string;\n\t\t\t\t\tmessage_id: string;\n\t\t\t\t},\n\t\t\t);\n\t\t\tconst { setAttributes } = props;\n\n\t\t\tsetIframeState('loading');\n\t\t\tsetIsEditingURL(false);\n\t\t\tsetAttributes({ url, iframe_src });\n\t\t}\n\t}\n\n\tfunction getIframeSrc(data: { username: string; message_id: string }) {\n\t\treturn message_view_url\n\t\t\t.replace('%username%', data.username)\n\t\t\t.replace('%message_id%', data.message_id)\n\t\t\t.replace('%userpic%', `${userpic}`);\n\t}\n\n\tfunction toggleUserPic(newValue: boolean) {\n\t\tsetIframeState('loading');\n\t\tlet { iframe_src } = props.attributes;\n\t\tiframe_src = addQueryArgs(iframe_src, { userpic: newValue });\n\t\tprops.setAttributes({ userpic: newValue, iframe_src });\n\n\t\tsetUserpic(newValue);\n\t}\n\n\tfunction onChangeAlign(align: SinglePostAtts['alignment']) {\n\t\tresizeIframe();\n\t\tprops.setAttributes({ alignment: align });\n\t}\n\tconst iframeRef = useRef<HTMLIFrameElement | null>();\n\tconst ref = useMergeRefs([iframeRef, useFocusableIframe()]);\n\n\tfunction resizeIframe() {\n\t\tif (\n\t\t\tnull === iframeRef?.current ||\n\t\t\t'undefined' === typeof iframeRef?.current?.contentWindow\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tconst iframe_height =\n\t\t\tiframeRef?.current?.contentWindow?.document.body.scrollHeight;\n\t\tif (iframe_height !== iframeHeight) {\n\t\t\tsetIframeHeight(iframe_height || 0);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', resizeIframe);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', resizeIframe);\n\t\t};\n\t}, []);\n\n\tif (isEditingURL || !iframe_src) {\n\t\treturn (\n\t\t\t<Placeholder\n\t\t\t\tlabel={label}\n\t\t\t\terror={iframeState === 'error'}\n\t\t\t\turl={url}\n\t\t\t\tonChangeURL={onChangeURL}\n\t\t\t\tonSubmit={updateUrl}\n\t\t\t/>\n\t\t);\n\t}\n\n\tconst iframe_height = iframeState === 'loading' ? 0 : iframeHeight;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Controls\n\t\t\t\tuserpic={userpic}\n\t\t\t\ttoggleUserPic={toggleUserPic}\n\t\t\t\tshowEditButton\n\t\t\t\tswitchBackToURLInput={() => setIsEditingURL(true)}\n\t\t\t\talignment={alignment}\n\t\t\t\tchangeAlignment={onChangeAlign}\n\t\t\t/>\n\t\t\t{iframeState === 'loading' && (\n\t\t\t\t<div className=\"wp-block-embed is-loading\">\n\t\t\t\t\t<Spinner />\n\t\t\t\t\t<p>{__('Loading…')}</p>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<div className={`${className} wptelegram-widget-message`}>\n\t\t\t\t<div className={'wp-block-embed__content-wrapper'}>\n\t\t\t\t\t<iframe\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tsrc={iframe_src}\n\t\t\t\t\t\tonLoad={() => {\n\t\t\t\t\t\t\tsetIframeState('idle');\n\t\t\t\t\t\t\tresizeIframe();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\theight={iframe_height}\n\t\t\t\t\t\ttitle={__('Telegram post')}\n\t\t\t\t\t>\n\t\t\t\t\t\tYour Browser Does Not Support iframes!\n\t\t\t\t\t</iframe>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n}\n","import type { Block } from '@wordpress/blocks';\n\nimport type { SinglePostAtts } from '../types';\n\nexport const blockAttributes: Block<SinglePostAtts>['attributes'] = {\n\turl: {\n\t\ttype: 'string',\n\t\tdefault: '',\n\t},\n\tiframe_src: {\n\t\ttype: 'string',\n\t\tdefault: '',\n\t},\n\tuserpic: {\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t},\n\talignment: {\n\t\ttype: 'string',\n\t\tdefault: 'center',\n\t},\n};\n","import { registerBlockType } from '@wordpress/blocks';\n\nimport { __ } from '@wpsocio/i18n';\n\nimport { Edit } from './Edit';\nimport { blockAttributes } from './constants';\n\nregisterBlockType('wptelegram/widget-single-post', {\n\ttitle: __('Telegram Single Post'),\n\ticon: 'format-aside',\n\tcategory: 'wptelegram',\n\tgetEditWrapperProps: (attributes) => {\n\t\tconst { alignment } = attributes;\n\t\tif (['left', 'center', 'right', 'wide', 'full'].includes(alignment)) {\n\t\t\treturn { 'data-align': alignment.toString() };\n\t\t}\n\t\treturn { 'data-align': '' };\n\t},\n\tattributes: blockAttributes,\n\n\tedit: Edit,\n\n\tsave: ({ attributes }) => {\n\t\tconst { alignment, iframe_src } = attributes;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`wp-block-wptelegram-widget-single-post wptelegram-widget-message align${alignment}`}\n\t\t\t>\n\t\t\t\t<iframe title={__('Telegram post')} src={iframe_src}>\n\t\t\t\t\tYour Browser Does Not Support iframes!\n\t\t\t\t</iframe>\n\t\t\t</div>\n\t\t);\n\t},\n\tdeprecated: [\n\t\t{\n\t\t\tattributes: blockAttributes,\n\t\t\tsave: ({ attributes }) => {\n\t\t\t\tconst { alignment, iframe_src } = attributes;\n\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`wp-block-wptelegram-widget-single-post wptelegram-widget-message align${alignment}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<iframe src={iframe_src} title={__('Telegram post')}>\n\t\t\t\t\t\t\tYour Browser Does Not Support iframes!\n\t\t\t\t\t\t</iframe>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t],\n});\n"],"names":["buildShortCodeFromAtts","attributes","allowedAtts","shrotcode","attsKV","filter","att","map","atts","length","join","shortcode","Output","savedSettings","_a","Edit","setAttributes","widget_width","widget_height","username","onChangeWidth","useCallback","newWidth","onChangeHeight","newHeight","onChangeUsername","newUsername","jsxs","Fragment","jsx","__","sprintf","className","blockAttributes","type","default","registerBlockType","getAuthorPhotoOptions","author_photo","num_messages","onChangeAuthorPhoto","newStyle","onChangeNum","newValue","getDomData","key","getPluginData","Controls","alignment","link","text","join_link_text","join_link_url","useEffect","onChangeChannelLink","onChangeButtonText","onChangeAlign","align","TelegramIcon","fill","JoinButton","isEditing","blockProps","useBlockProps","userpic","toggleUserPic","showEditButton","switchBackToURLInput","changeAlignment","errorStyle","Placeholder","error","label","onChangeURL","onSubmit","style","url","message_view_url","props","iframeState","setIframeState","useState","isEditingURL","setIsEditingURL","setUrl","setUserpic","iframeHeight","setIframeHeight","iframe_src","event","updateUrl","regex","match","iframe_src2","getIframeSrc","data","addQueryArgs","resizeIframe","iframeRef","useRef","useMergeRefs","useFocusableIframe","iframe_height2","_c","_b","window","iframe_height","ref"],"mappings":"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"}